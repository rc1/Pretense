doctype 5
html
    head
        title= title

        //- # Styles
        style.
            body, html { margin: 0; padding: 0; }
            body { background: url( "backgroun.png" ); }   

        style= "#container { background-color:" + backgroundColor +"; }"

        - if ( shouldCenter )
            style= "body { background-color:" + backgroundColor +"; background-image: none; }"
            style.
                #container { margin: 0 auto; }

        //- # JS
        //- ## Libs
        script( src="jquery-2.0.3.min.js" )
        script( src="lodash.min.js" )
        script( src="W.min.js" )
        //- ## Bootstrap data
        script!= "var files="+ JSON.stringify( files ) +"; var shouldLoadFirstImage = " + ( !!shouldLoadFirstImage ? "true" : "false" ) + ";"
        //- ## Main
        script.

            var currentFilename = null;
           
            $( function () { 
                if ( window.location.hash.length === 0 ) {
                    if ( shouldLoadFirstImage ) {
                        var first = firstFilename();
                        if ( first ) {
                            window.location.hash = first;
                        }
                    } else {
                        var last = lastFilename();
                        if ( last ) {
                            window.location.hash = last;
                        }
                    }
                } else {
                    hashRouteTrigger();
                }
            });

            // ### Actions
            
            function next () {           
                var filename = filenameAfterFilename( currentFilename );
                if ( filename ) {
                    window.location.hash = filename;
                }
            }

            function previous () {
                var filename = filenameBeforeFilename( currentFilename );
                if ( filename ) {
                    window.location.hash = filename
                }
            }

            function render ( file ) { 
                if ( !file ) { return; }     
                currentFilename = file.f;
                // ### Add the background image
                $( "#container" ).css( {
                    width : file.w,
                    height: file.h,
                    backgroundImage: "url('i/"+file.f+"')"
                });
            }

            // ### Keypress
            
            $( document ).on( "keydown", function ( e ) {
                switch ( e.keyCode )  {
                    case /* left */37: previous(); break;
                    case /* right */39: next(); break;
                    default:  console.log( "Uncaugh keypress", e.keyCode ); break;
                }
            });

            // ### Click
            
            $( "body" ).on( "click touch", function () {
                next();
            });

            // ### Routers
            
            // ####Â Hash
            
            var hashRouter = new W.Router();

            hashRouter
                .map( ":file" ).to( function ( params ) {
                    if ( params.file.length === 0 ) { return; }
                    var file = fileByFilename( params.file );
                    if ( file ) {
                        render( file );
                    } else {
                        console.log( "could not render file", file, params.file );
                    }
                })
                .fallback( function (data) {
                    console.log( "uncaght oute on hash", arguments );
                });

            window.onhashchange = hashRouteTrigger;
            
            function hashRouteTrigger () {
                console.log( "triggering ", window.location.hash  );
                hashRouter.trigger( window.location.hash.replace("#", "") );
            }
            
            // #### Socket
            
            var socketRouter = new W.Router();

            socketRouter
                .map( "/added" ).to( function ( params, data ) {
                    files = data.imageFiles;
                    console.log( files );
                    window.location.hash = data.file;
                })
                .map( "/changed" ).to( function ( params, data ) {
                    files = data.imageFiles;
                    window.location.hash = data.file;
                })
                .map( "/deleted" ).to( function ( params, data ) {
                    files = data.imageFiles;
                    console.log( "deleted" );
                })
                .fallback( function (data) {
                    console.log( "uncaght oute", data );
                });

            // ### Socket connection
            
            // Create the websocket url
            var socketConnection = new W.JSONSocketConnection({
                socketUrl : "ws://" + window.location.host,
                attemptReconnectionAfterMS : 5000
            });

            socketConnection.on( "json", function ( data ) {
                socketRouter.trigger( data.resource, data );
            });

            socketConnection.openSocketConnection();

            // ### Utils
            
            function fileByFilename( filename ) {
                return _.find( files, function ( file ) {
                    return file.f === filename;
                });
            }

            function filenameBeforeFilename( filename ) {
                var index =  _.findIndex( files, function ( file) {
                    return file.f === filename;
                });
                if ( index <= 0 ) {
                    return null;
                }
                return files[ index-1 ].f;
            }

            function filenameAfterFilename( filename ) {
                var index =  _.findIndex( files, function ( file) {
                    return file.f === filename;
                });
                if ( index === -1 || index >= files.length-1 ) {
                    return null;
                }
                return files[ index+1 ].f;
            }

            function lastFilename(  ) {
                if ( files.length === 0 ) {
                    return false;
                }
                return files[ files.length-1 ].f;
            }

            function firstFilename(  ) {
                if ( files.length === 0 ) {
                    return false;
                }
                return files[ files.length-1 ].f;
            }

    body
        #container